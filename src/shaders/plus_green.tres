[gd_resource type="VisualShader" load_steps=15 format=3 uid="uid://dlul47ohgliyt"]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_hmgpx"]
default_input_values = [0, 0.0, 1, 0.25, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_2eahc"]
default_input_values = [0, 0.0, 1, 0.75, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_apgxy"]
default_input_values = [0, 0.0, 1, 0.45, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_of3ag"]
default_input_values = [0, 0.0, 1, 0.55, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_e8gkv"]
input_name = "color"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_4d4iv"]
expanded_output_ports = [0]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_wf8ua"]
input_name = "color"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ybeqp"]
expanded_output_ports = [0]
input_name = "uv"

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_eyoay"]
default_input_values = [0, 0.0, 1, 0.45, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_l1dbc"]
default_input_values = [0, 0.0, 1, 0.55, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_vhddy"]
default_input_values = [0, 0.0, 1, 0.25, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_5b2mf"]
default_input_values = [0, 0.0, 1, 0.75, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_j70rq"]
operator = 5

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_3jaxi"]
constant = Color(0, 1, 0, 1)

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
// Input:2
	vec2 n_out2p0 = UV;
	float n_out2p1 = n_out2p0.r;
	float n_out2p2 = n_out2p0.g;


// Input:16
	vec4 n_out16p0 = COLOR;


// ColorConstant:3
	vec4 n_out3p0 = vec4(0.000000, 1.000000, 0.000000, 1.000000);


	vec3 n_out12p0;
// If:12
	float n_in12p1 = 0.25000;
	float n_in12p2 = 0.00001;
	vec3 n_in12p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out2p1 - n_in12p1) < n_in12p2)
	{
		n_out12p0 = n_in12p3;
	}
	else if(n_out2p1 < n_in12p1)
	{
		n_out12p0 = vec3(n_out16p0.xyz);
	}
	else
	{
		n_out12p0 = vec3(n_out3p0.xyz);
	}


	vec3 n_out13p0;
// If:13
	float n_in13p1 = 0.75000;
	float n_in13p2 = 0.00001;
	vec3 n_in13p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out2p1 - n_in13p1) < n_in13p2)
	{
		n_out13p0 = n_in13p3;
	}
	else if(n_out2p1 < n_in13p1)
	{
		n_out13p0 = n_out12p0;
	}
	else
	{
		n_out13p0 = vec3(n_out16p0.xyz);
	}


	vec3 n_out14p0;
// If:14
	float n_in14p1 = 0.45000;
	float n_in14p2 = 0.00001;
	vec3 n_in14p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out2p2 - n_in14p1) < n_in14p2)
	{
		n_out14p0 = n_in14p3;
	}
	else if(n_out2p2 < n_in14p1)
	{
		n_out14p0 = vec3(n_out16p0.xyz);
	}
	else
	{
		n_out14p0 = n_out13p0;
	}


	vec3 n_out15p0;
// If:15
	float n_in15p1 = 0.55000;
	float n_in15p2 = 0.00001;
	vec3 n_in15p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out2p2 - n_in15p1) < n_in15p2)
	{
		n_out15p0 = n_in15p3;
	}
	else if(n_out2p2 < n_in15p1)
	{
		n_out15p0 = n_out14p0;
	}
	else
	{
		n_out15p0 = vec3(n_out16p0.xyz);
	}


// Input:17
	vec2 n_out17p0 = UV;
	float n_out17p1 = n_out17p0.r;
	float n_out17p2 = n_out17p0.g;


// Input:19
	vec4 n_out19p0 = COLOR;


	vec3 n_out20p0;
// If:20
	float n_in20p1 = 0.45000;
	float n_in20p2 = 0.00001;
	vec3 n_in20p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out17p1 - n_in20p1) < n_in20p2)
	{
		n_out20p0 = n_in20p3;
	}
	else if(n_out17p1 < n_in20p1)
	{
		n_out20p0 = vec3(n_out19p0.xyz);
	}
	else
	{
		n_out20p0 = vec3(n_out3p0.xyz);
	}


	vec3 n_out21p0;
// If:21
	float n_in21p1 = 0.55000;
	float n_in21p2 = 0.00001;
	vec3 n_in21p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out17p1 - n_in21p1) < n_in21p2)
	{
		n_out21p0 = n_in21p3;
	}
	else if(n_out17p1 < n_in21p1)
	{
		n_out21p0 = n_out20p0;
	}
	else
	{
		n_out21p0 = vec3(n_out19p0.xyz);
	}


	vec3 n_out22p0;
// If:22
	float n_in22p1 = 0.25000;
	float n_in22p2 = 0.00001;
	vec3 n_in22p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out17p2 - n_in22p1) < n_in22p2)
	{
		n_out22p0 = n_in22p3;
	}
	else if(n_out17p2 < n_in22p1)
	{
		n_out22p0 = vec3(n_out19p0.xyz);
	}
	else
	{
		n_out22p0 = n_out21p0;
	}


	vec3 n_out23p0;
// If:23
	float n_in23p1 = 0.75000;
	float n_in23p2 = 0.00001;
	vec3 n_in23p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out17p2 - n_in23p1) < n_in23p2)
	{
		n_out23p0 = n_in23p3;
	}
	else if(n_out17p2 < n_in23p1)
	{
		n_out23p0 = n_out22p0;
	}
	else
	{
		n_out23p0 = vec3(n_out19p0.xyz);
	}


// ColorOp:24
	vec3 n_out24p0 = (n_out15p0) / (vec3(1.0) - n_out23p0);


// Output:0
	COLOR.rgb = n_out24p0;


}
"
graph_offset = Vector2(-315.775, 282.222)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1660, 660)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_ybeqp")
nodes/fragment/2/position = Vector2(-320, 140)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorConstant_3jaxi")
nodes/fragment/3/position = Vector2(-200, 580)
nodes/fragment/12/node = SubResource("VisualShaderNodeIf_hmgpx")
nodes/fragment/12/position = Vector2(140, 160)
nodes/fragment/13/node = SubResource("VisualShaderNodeIf_2eahc")
nodes/fragment/13/position = Vector2(400, 200)
nodes/fragment/14/node = SubResource("VisualShaderNodeIf_apgxy")
nodes/fragment/14/position = Vector2(660, 260)
nodes/fragment/15/node = SubResource("VisualShaderNodeIf_of3ag")
nodes/fragment/15/position = Vector2(900, 320)
nodes/fragment/16/node = SubResource("VisualShaderNodeInput_e8gkv")
nodes/fragment/16/position = Vector2(-320, 820)
nodes/fragment/17/node = SubResource("VisualShaderNodeInput_4d4iv")
nodes/fragment/17/position = Vector2(-320, 1080)
nodes/fragment/19/node = SubResource("VisualShaderNodeInput_wf8ua")
nodes/fragment/19/position = Vector2(-320, 1440)
nodes/fragment/20/node = SubResource("VisualShaderNodeIf_eyoay")
nodes/fragment/20/position = Vector2(240, 1040)
nodes/fragment/21/node = SubResource("VisualShaderNodeIf_l1dbc")
nodes/fragment/21/position = Vector2(500, 1100)
nodes/fragment/22/node = SubResource("VisualShaderNodeIf_vhddy")
nodes/fragment/22/position = Vector2(760, 1140)
nodes/fragment/23/node = SubResource("VisualShaderNodeIf_5b2mf")
nodes/fragment/23/position = Vector2(1000, 1220)
nodes/fragment/24/node = SubResource("VisualShaderNodeColorOp_j70rq")
nodes/fragment/24/position = Vector2(1320, 760)
nodes/fragment/connections = PackedInt32Array(2, 1, 12, 0, 12, 0, 13, 5, 2, 1, 13, 0, 13, 0, 14, 4, 2, 2, 14, 0, 14, 0, 15, 5, 2, 2, 15, 0, 16, 0, 12, 5, 16, 0, 13, 4, 16, 0, 14, 5, 16, 0, 15, 4, 17, 1, 20, 0, 19, 0, 20, 5, 17, 1, 21, 0, 20, 0, 21, 5, 19, 0, 21, 4, 17, 2, 22, 0, 21, 0, 22, 4, 19, 0, 22, 5, 17, 2, 23, 0, 19, 0, 23, 4, 22, 0, 23, 5, 15, 0, 24, 0, 23, 0, 24, 1, 24, 0, 0, 0, 3, 0, 20, 4, 3, 0, 12, 4)
